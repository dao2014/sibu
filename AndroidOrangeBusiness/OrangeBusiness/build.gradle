apply plugin: 'com.android.application'

dependencies {
    compile fileTree(dir: "$buildDir/native-libs", include: 'native-libs.jar')
    compile fileTree(dir: 'libs', include: '*.jar')
    compile project(':ExtraLibs:Volley')
    compile project(':ExtraLibs:PullToRefresh')
    compile project(':ExtraLibs:image-chooser-lib')
    compile project(':ExtraLibs:simple-crop-image-lib')
    compile project(':ExtraLibs:ImageViewer')
    compile project(':ExtraLibs:ImageCacheLib')
    compile project(':ExtraLibs:ZXingLib')
    compile project(':ExtraLibs:wheel')
    compile project(':ExtraLibs:RongCloud')
}

task nativeLibsToJar(
        type: Zip,
        description: 'create a jar archive of the native libs') {
    destinationDir file("$buildDir/native-libs")
    baseName 'native-libs'
    extension 'jar'
    from fileTree(dir: 'libs', include: '**/*.so')
    into 'lib/'
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(nativeLibsToJar)
}

clean.dependsOn 'cleanNativeLibsToJar'

def getMyVersionCode() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHH')
    return formattedDate
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 22
        versionCode getMyVersionCode() as Integer
        versionName '2.0.0'
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    signingConfigs {
        release {
            storeFile file("../project.keystore")
            storePassword "OrangeBusiness+123456"
            keyAlias "alias_OrangeBusiness"
            keyPassword "OrangeBusiness+123456"
        }

        debug {
            storeFile file("../project.keystore")
            storePassword "OrangeBusiness+123456"
            keyAlias "alias_OrangeBusiness"
            keyPassword "OrangeBusiness+123456"
        }
    }

    buildTypes {
        release {
            shrinkResources false
            proguardFile './proguard-project.txt'
            proguardFile './proguard-gson.pro'
            proguardFile './proguard-exclude.txt'
            proguardFile './proguard-exclude-orangebusiness.txt'
            signingConfig signingConfigs.release
            jniDebuggable false
            minifyEnabled true
        }
        debug {
            debuggable true
            jniDebuggable false
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

}
